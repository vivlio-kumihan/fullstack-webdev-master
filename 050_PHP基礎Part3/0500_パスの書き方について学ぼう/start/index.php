<?php
/**
 * パスの書き方について学ぼう
 * 
 * - マジック定数 __DIR__, __FILE__を使ってみよう
 * - dirnameの使い方を学ぼう
 * - 相対パスと絶対パス
 * - \と/は使い分けよう
 * - "と'は使い分けよう
 */

// // 相対パスで指定できる。
// require 'file1.php';
// // これでもいい。
// require './file1.php';
// // 一つ上の階層のファイル。
// require '../start/file1.php';

// // 絶対パス
// // まずは、マジック定数を確認する。
// // ルートからの絶対パスを参照できるんやってんね。。。
// // でこちらは現在編集しているファイルを内包するディレクトリの絶対パスが分かるのよ。
// echo __DIR__;
// // => /Applications/MAMP/htdocs/fullstack-webdev-master/050_PHP基礎Part3/0500_パスの書き方について学ぼう/start
// // となると、ファイルはこうか。
// // 素晴らしい。
// echo __FILE__;
// // => /Applications/MAMP/htdocs/fullstack-webdev-master/050_PHP基礎Part3/0500_パスの書き方について学ぼう/start/index.php

// // では、やってみる。この相対パスを絶対パスに書き換える。
// require __DIR__ . "/sub/file2.php";

// // __DIR__も便利なんだが、
// // ファイルのある階層からn階層上を指定できる
// // dirname()関数がある。
// echo dirname(__FILE__, 2);

// !!!!!!!!!!!!!エスケープシークエンス!!!!!!!!!!!!!
// 『""』の中では『\』はエスケープ・シークエンスとなる。
// \t, \n, \s, \wなどなど。。。意味を持ってしまう。
// 『""』の中でのパスの区切りは『/』だよという話。

// !!!!!!!!!!!!!混ぜるな危険!!!!!!!!!!!!!
// 絶対パスの指定の際に相対パスの記述を混ぜない。
// requireは許容するがディレクトリを一つ上『../』の指定すると
// 独特の挙動をするので。いちいち挙動を覚えてられないから一律禁止にする。
// 頭悪いからな。。。